/*
 * Dice.cpp
 *
 *  Created on: 31 Aug 2022
 *      Author: Daniil Marinec
 */

#include "Dice.h"

Dice::Dice() {
	map_ports();
	for(int i = 1, i < 8; i++) {
		this->pd[i].write(0);
	}
}

Dice::~Dice() {
	// TODO Auto-generated destructor stub
}

void Dice::Show(int number) {
	if(number < 0) number = 0;
	switch (number)
	{
	case 0:
		for(int i = 1, i < 8; i++) {
		this->pd[i].write(0);
		}
		break;
	case 1:
		
		break;
	case 2:

		break;
	case 3:

		break;
	case 4:

		break;
	case 5:

		break;
	case 6:

		break;
	default:
		for(int i = 1, i < 8; i++) {
		this->pd[i].write(1);
		}
		break;
	}
}
/*
0< - PD1-7 off
1  - PD4
2  - PD7 PD3
3  - PD7 PD4 PD3
4  - PD7 PD1 PD5 PD3
5  - PD7 PD1 PD5 PD3 PD4
6  - PD5 PD6 PD7 PD1 PD2 PD3
7> - PD1-7 on
*/


void Dice::map_ports() {	
	//Leds
	this->pd[0](1, 9, false);
	this->pd[1](0, 29, false);
	this->pd[2](0, 9, false);
	this->pd[3](0, 10, false);
	this->pd[4](0, 16, false);
	this->pd[5](0, 3, false);
	this->pd[6](0, 0, false);
}